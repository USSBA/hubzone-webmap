# global configuration for all jobs
name: Demo
on:
  push:
    branches-ignore:
      - '**'
    tags:
      - deploy-demo

# sets the default shell for all jobs
defaults:
  run:
    shell: bash

# permissions can be set globally for jobs
permissions:
  contents: read # contents is used for checking out code
  id-token: write

env:
  AWS_REGION: 'us-east-1'
  AWS_ECR_REGISTRY_ID: '222484291001'
  WORKSPACE: 'demo'

jobs:
  webmap:
    runs-on: ubuntu-latest
    environment: ${{ env.WORKSPACE }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: ${{ secrets.OIDC_ROLE_ARN }}
          aws-region: ${{ env.AWS_REGION }}

      - name: ECR Login
        uses: aws-actions/amazon-ecr-login@v1
        id: ecr-login
        with:
          registries: ${{ env.AWS_ECR_REGISTRY_ID}}

      - name: ECR Build & Push
        uses: ./.github/actions/ecr
        with:
          registry: ${{ steps.ecr-login.outputs.registry }}
          repo: hubzone/hubzone-webmap
          # Tagging with ref_name (develop) and sha so we can leverage the sha and not initiate a force deployment
          # from Terraform
          tags: ${{ github.ref_name }} ${{ github.sha }}
          cache-from: ${{ github.ref_name }}

      - name: 'Install Terraform 1.0.9'
        uses: 'hashicorp/setup-terraform@v2'
        with:
          terraform_version: '1.0.9'

      - name: Terraform Plan & Apply
        uses: ./.github/actions/terraform
        with:
          folder: ./terraform
          image: ${{ github.sha }}
          workspace: ${{ env.WORKSPACE }}