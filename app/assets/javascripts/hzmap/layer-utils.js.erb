//  hubzone layer utilities

HZApp.Layers.LayerUtils = {
  newSLDXMLStyle: function(options){ //build a new style object instance based on passed in parameters
    this.layerName = options.layerName;
    this.styles = options.styles; //array of styles

    for (var i = 0; i < this.styles.length; i++) {
      this.styles[i] = HZApp.Layers.LayerUtils.checkStylesForNulls(this.styles[i]);
    }

    this.styleRules = HZApp.Layers.LayerUtils.buildStyleRules(this.styles);

    //this is what will be passed to the URL
    return HZApp.Layers.LayerUtils.constructSLDXML({
      layerName: this.layerName,
      styleRules: this.styleRules  
    }); 
  },
  buildStyleRules: function(styles){
    var styleRules = '<se:Rule>';
    for (var i = 0; i < styles.length; i++) {
      if (styles[i].type === 'polygon'){
        styleRules += HZApp.Layers.LayerUtils.newPolygonSymbolizer(styles[i]);
      } else if (styles[i].type === 'circle'){
        styleRules += HZApp.Layers.LayerUtils.newCircleSymbolizer(styles[i]);
      } else if (styles[i].type === 'horline'){
        styleRules += HZApp.Layers.LayerUtils.newHorLineSymbolizer(styles[i]);
      } else { //return a a basic polygon if the type is not recognized
        styleRules += HZApp.Layers.LayerUtils.newPolygonSymbolizer(styles[i]);
      }
    }
    styleRules += '</se:Rule>';
    return styleRules;
  },
  checkStylesForNulls: function(style){
    var type = style.type;
    Object.keys(HZApp.Layers.LayerDefs.defaults).map(function(defaultStyle){
      if (style[defaultStyle]){
        style[defaultStyle] = style[defaultStyle];
      } else {
        style[defaultStyle] = HZApp.Layers.LayerDefs.defaults[defaultStyle];
      }
    });
    style.type = type;
    return style;
  },
  constructSLDXML: function(options){
    return  (
      ('<?xml version="1.0" encoding="UTF-8"?>' +
        '<StyledLayerDescriptor ' + 
        'xmlns="http://www.opengis.net/sld" ' + 
        'xmlns:ogc="http://www.opengis.net/ogc" ' + 
        'xmlns:xlink="http://www.w3.org/1999/xlink" ' + 
        'xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.0.0" xsi:schemaLocation="http://www.opengis.net/sld StyledLayerDescriptor.xsd" ' + 
        'xmlns:se="http://www.opengis.net/se">' +
          '<NamedLayer>' +
            "<se:Name><%= MAP_CONFIG[:geom_wms_settings][:workspace] %>:" + options.layerName + '</se:Name>' +
              '<UserStyle>' +
                '<se:FeatureTypeStyle>' +
                  options.styleRules + 
                '</se:FeatureTypeStyle>' +
              '</UserStyle>' +
          '</NamedLayer>' +
        '</StyledLayerDescriptor>')
    );
  },
  newHorLineSymbolizer: function(styleOptions){
    return (
      '<PolygonSymbolizer>' +
        '<Fill>' +
          '<GraphicFill>' +
            '<Graphic>' +
              '<Mark>' +
                '<WellKnownName>shape://horline</WellKnownName>' + 
                '<Stroke>' +
                  '<CssParameter name="stroke">' + styleOptions.lineStrokeColor + '</CssParameter>' +
                  '<CssParameter name="stroke-width">' + styleOptions.strokeWidth + '</CssParameter>' +
                  '<CssParameter name="stroke-opacity">' + styleOptions.strokeOpacity + '</CssParameter>' +
                '</Stroke>' +
              '</Mark>' +
              '<Size>' + styleOptions.tileSize + '</Size>' +
              '<Displacement>' + 
                '<DisplacementX>' + styleOptions.displacementX +  '</DisplacementX>' +
                '<DisplacementY>' + styleOptions.displacementY +  '</DisplacementY>' +
              '</Displacement>' + 
            '</Graphic>' +
          '</GraphicFill>' +
        '</Fill>' +
      '</PolygonSymbolizer>'
    );
  },
  newCircleSymbolizer: function(styleOptions){
    return (
      '<se:PolygonSymbolizer>' +
        '<se:Fill>' +
          '<se:GraphicFill>' +
            '<se:Graphic>' +
              '<se:Mark>' +
                '<se:WellKnownName>circle</se:WellKnownName>' + 
                '<se:Fill>' +
                  '<se:SvgParameter name="fill">' + styleOptions.circleFillColor + '</se:SvgParameter>' +
                '</se:Fill>' +
              '</se:Mark>' +
              '<se:Size>' + styleOptions.tileSize + '</se:Size>' +
            '</se:Graphic>' +
          '</se:GraphicFill>' +
        '</se:Fill>' +
        '<VendorOption name="distance">' + 6 + ',' + 6 + '</VendorOption>' +
      '</se:PolygonSymbolizer>'
    );
  },
  newPolygonSymbolizer: function(styleOptions){
    return (
      '<PolygonSymbolizer>' +
        '<Fill>' +
          '<CssParameter name="fill">' + styleOptions.fillColor +'</CssParameter>' +
          '<CssParameter name="fill-opacity">' + styleOptions.fillOpacity + '</CssParameter>' +
        '</Fill>' +
        '<Stroke>' +
          '<CssParameter name="stroke">' + styleOptions.strokeColor + '</CssParameter>' +
          '<CssParameter name="stroke-width">' + styleOptions.strokeWidth + '</CssParameter>' +
          '<CssParameter name="stroke-opacity">' + styleOptions.strokeOpacity + '</CssParameter>' +
        '</Stroke>' +
      '</PolygonSymbolizer>'
    );
  } 
};
