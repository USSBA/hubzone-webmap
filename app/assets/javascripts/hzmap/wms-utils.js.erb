HZApp.WMSUtils = (function(){
  return {
    updateIdleMap: function(){
      var map = this;
      //for each layer defined in the hzWMSOverlays object call the fetchNewWMS function
      // update the WMS call for that layer
      Object.keys(HZApp.Layers.LayerDefs.hzWMSOverlays).map(function(layer){
        HZApp.WMSUtils.fetchNewWMS({
          mapScope: map,
          layer: layer
        });
      });
    },
    fetchNewWMS: function(options){
      //get the map extents and build URL
      var bbox = this.getBbox(options.mapScope.getBounds());
      var imageBounds = this.getImageBounds(bbox);
      var layer = options.layer;

      // build the layer XML styles if they dont exist
      this.checkForLayerStyles();

      var url = this.buildWMSUrl({
        layer: layer,
        bbox: bbox,
        sldXMLStyle: HZApp.Layers.LayerDefs.hzWMSOverlays[layer].sldXMLStyle
      });

      //push a new groundOverlay into the hzWMSOverlays array container
      HZApp.Layers.LayerDefs.hzWMSOverlays[layer].overlay.push(new google.maps.GroundOverlay(
          url,
          imageBounds
      ));

      //update WMS layers, removing old and adding new to the map
      this.updateLayerWMSOverlay({
        layer: layer,
        mapScope: options.mapScope
      });
    },
    checkForLayerStyles: function(){
      Object.keys(HZApp.Layers.LayerDefs.hzWMSOverlays).map(function(layer){
        if (!HZApp.Layers.LayerDefs.hzWMSOverlays[layer].sldXMLStyle) {
          HZApp.Layers.LayerDefs.hzWMSOverlays[layer].sldXMLStyle = HZApp.Layers.LayerUtils.newSLDXMLStyle({
            layerName: layer,
            styles: HZApp.Layers.LayerDefs.hzWMSOverlays[layer].styleOptions
          });
        }
      });
    },
    getBbox: function (mapBounds) {
      //get the bounding box of the current map and parse as a string
      var NELat = mapBounds.getNorthEast().lat();
      var NELng = mapBounds.getNorthEast().lng();
      var SWLat = mapBounds.getSouthWest().lat();
      var SWLng = mapBounds.getSouthWest().lng();
      return [SWLng, SWLat, NELng, NELat].join(',');
    },
    getImageBounds: function(bbox){
      var bboxArr = bbox.split(',');
      var imageBounds = this.createGoogleLatLngBounds(
                          parseFloat(bboxArr[0]),
                          parseFloat(bboxArr[1]),
                          parseFloat(bboxArr[2]),
                          parseFloat(bboxArr[3])
      );
      return imageBounds;
    },
    createGoogleLatLngBounds: function(SWLng, SWLat, NELng, NELat){
      return new google.maps.LatLngBounds(
          new google.maps.LatLng(SWLat, SWLng),
          new google.maps.LatLng(NELat, NELng)
        );
    },
    buildWMSUrl: function(options){
      var url = "<%= MAP_CONFIG[:geom_wms_settings][:url_root] %>";
      url += "&REQUEST=GetMap";
      url += "&SERVICE=WMS";
      url += "&VERSION=1.1.0";
      url += "&LAYERS=" + "<%= MAP_CONFIG[:geom_wms_settings][:workspace] %>:" + options.layer;
      url += "&FORMAT=image/png" ;
      url += "&TRANSPARENT=TRUE";
      url += "&SRS=EPSG:4326";
      url += "&BBOX=" + options.bbox;
      url += "&WIDTH=" + parseInt($('#map').width()*2); //double the resolution for better screens, but make sure its int
      url += "&HEIGHT=" + parseInt($('#map').height()*2); //double the resolution for better screens, but make sure its int
      url += ('&SLD_BODY=' + encodeURIComponent(options.sldXMLStyle));
      return url;
    },
    //helper function for updating a single layer's WMS overlay
    updateLayerWMSOverlay: function(options){
      var wmsLayer = HZApp.Layers.LayerDefs.hzWMSOverlays[options.layer].overlay;
      if (wmsLayer.length === 1){
        wmsLayer[0].setMap(options.mapScope);
      } else if (wmsLayer.length > 1){ //assume last is newest and any other have to go
        var tmpLayer = wmsLayer[wmsLayer.length-1];
        for (var i = 0; i < wmsLayer.length-1; i++) {
          wmsLayer[i].setMap(null);
        }
        HZApp.Layers.LayerDefs.hzWMSOverlays[options.layer].overlay = [];
        HZApp.Layers.LayerDefs.hzWMSOverlays[options.layer].overlay.push(tmpLayer);
        HZApp.Layers.LayerDefs.hzWMSOverlays[options.layer].overlay[0].setMap(options.mapScope);
      } else { //
        // console.warn('no WMS found in layer');
        return null;
      }

      var clickEventTimer;

      HZApp.Layers.LayerDefs.hzWMSOverlays[options.layer].overlay[0].addListener('click', function(event) {
          clickEventTimer = setTimeout(function() { HZApp.MapUtils.catchMapClick(event); }, 400);
      });

      HZApp.Layers.LayerDefs.hzWMSOverlays[options.layer].overlay[0].addListener('dblclick', function() {
          clearTimeout(clickEventTimer);
      });
    }
  };
})();


